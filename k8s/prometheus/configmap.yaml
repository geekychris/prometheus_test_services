apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: micrometer-analytics
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: analytics-platform
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s
      evaluation_interval: 10s

    rule_files:
      - "/etc/prometheus/rules/recording_rules.yml"
      - "/etc/prometheus/rules/alerting_rules.yml"

    scrape_configs:
      # Monitor Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 10s

      # User Analytics Service - Direct service discovery
      - job_name: 'user-analytics-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - micrometer-analytics
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: user-analytics-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        scrape_interval: 5s
        metrics_path: /actuator/prometheus
        scrape_timeout: 3s

      # Commerce Analytics Service - Direct service discovery
      - job_name: 'commerce-analytics-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - micrometer-analytics
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: commerce-analytics-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        scrape_interval: 5s
        metrics_path: /actuator/prometheus
        scrape_timeout: 3s

      # Alternative: Pod-based discovery with annotations (useful for replica sets)
      - job_name: 'kubernetes-pods-annotated'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - micrometer-analytics
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
          target_label: service
        scrape_interval: 5s
        scrape_timeout: 3s

      # Kubernetes API server metrics (optional)
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - default
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Kubernetes node metrics (kubelet)
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/$1/proxy/metrics
