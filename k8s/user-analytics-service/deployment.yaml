apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-analytics-service
  namespace: micrometer-analytics
  labels:
    app.kubernetes.io/name: user-analytics-service
    app.kubernetes.io/component: analytics
    app.kubernetes.io/part-of: analytics-platform
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: user-analytics-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-analytics-service
        app.kubernetes.io/component: analytics
        app.kubernetes.io/part-of: analytics-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8081"
    spec:
      containers:
      - name: user-analytics-service
        image: user-analytics-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        env:
        - name: SPRING_CONFIG_LOCATION
          value: "classpath:/application.yml,file:/config/application.yml"
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: APP_ENVIRONMENT
          value: "kubernetes"
        - name: APP_INSTANCE
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /logs
      volumes:
      - name: config
        configMap:
          name: user-analytics-config
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      restartPolicy: Always
